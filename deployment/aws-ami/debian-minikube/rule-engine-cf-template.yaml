AWSTemplateFormatVersion: "2010-09-09"
Description: "Syndicate Rule Engine AMI deployment template"
Mappings:
  RegionMap:
    eu-north-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-south-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    eu-west-3:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    eu-west-2:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    eu-west-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-northeast-3:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-northeast-2:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-northeast-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    sa-east-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ca-central-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-southeast-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    ap-southeast-2:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    eu-central-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    us-east-1:
      ImageId: ami-03cf7ed99946632f4
    us-east-2:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    us-west-1:
      ImageId: ami-xxxxxxxxxxxxxxxxx
    us-west-2:
      ImageId: ami-xxxxxxxxxxxxxxxxx
Parameters:
  VpcId:
    Description: "ID of an existing Virtual Private Cloud (VPC) where to create a security group"
    Type: 'AWS::EC2::VPC::Id'
  SubnetId:
    Description: "ID of a subnet within the VPC"
    Type: "AWS::EC2::Subnet::Id"
#  SecurityGroupIds:
#    Description: "Security group id to attach to the instance"
#    Type: List<AWS::EC2::SecurityGroup::Id>
#    Default: ""
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: "must be the name of an existing EC2 KeyPair."
  InstanceType:
    Description: "EC2 Instance type"
    Type: String
    Default: m7g.medium
    ConstraintDescription: "must be ARM-based instance type, m7g.medium is minimal required type"
    AllowedValues:
      - m7g.medium
      - m7g.large
      - m7g.xlarge
      - r7g.medium
      - r7g.large
      - r7s.xlarge
      - c7g.medium
      - c7g.large
      - c7g.xlarge
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network configuration"
        Parameters:
          - VpcId
          - SubnetId
          - SecurityGroupId
      - Label:
          default: "EC2 Instance configuration"
        Parameters:
          - InstanceType
          - KeyName
#Conditions:
#  CreateSecurityGroup: !Equals
#    - !Join ["", !Ref SecurityGroupIds]
#    - ""
Resources:
  SyndicateRuleEngineSecurityGroup:
    Type: AWS::EC2::SecurityGroup
#    Condition: CreateSecurityGroup
    Properties:
      GroupDescription: Allows access to Defect Dojo and Modular API and Minio API for presigned-urls
      GroupName: !Sub ${AWS::StackName}-sg
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sg
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow access to Defect Dojo on port 80
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow access to Modular API on port 8085
          IpProtocol: tcp
          FromPort: 8085
          ToPort: 8085
        - CidrIp: 0.0.0.0/0
          Description: Allow access to Minio API on port 9000
          IpProtocol: tcp
          FromPort: 9000
          ToPort: 9000
      VpcId: !Ref VpcId
  SyndicateRuleEngineLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-imdsv2-launch-template
      LaunchTemplateData:
        MetadataOptions:
          HttpEndpoint: enabled
          HttpPutResponseHopLimit: 3
          HttpTokens: required
  SyndicateRuleEngineInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SyndicateRuleEngineSecurityGroup
      LaunchTemplate:
        LaunchTemplateId: !Ref SyndicateRuleEngineLaunchTemplate
        Version: !GetAtt SyndicateRuleEngineLaunchTemplate.DefaultVersionNumber
Outputs:
  InstanceId:
    Value: !GetAtt SyndicateRuleEngineInstance.InstanceId
  PublicIp:
    Value: !GetAtt SyndicateRuleEngineInstance.PublicIp