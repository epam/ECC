# Custodian Service exclusively on-prem envs
# name=value
# [syndicate alias name]
# if alias name is not specified, it's the same as env name.

_service_mode=docker  # saas | docker
_db_name=custodian_as_a_service

SERVICE_MODE=${_service_mode}

# <buckets>  for saas these bucket names must be the same as ones
# from lambda envs
reports_bucket_name=custodian-reports
caas_rulesets_bucket=custodian-rulesets
caas_ssm_backup_bucket=custodian-ssm-backup
stats_s3_bucket_name=custodian-statistics
templates_s3_bucket_name=custodian-templates
caas_metrics_bucket_name=custodian-metrics
# </buckets>

# <General settings>
last_scan_threshold=0
feature_skip_cloud_identifier_validation=false
batch_job_log_level=DEBUG
feature_allow_only_temp_aws_credentials=false
# </General settings>

# <Custodian secrets>
MONGO_DATABASE=${_db_name}
MONGO_USER=
MONGO_PASSWORD=
MONGO_URL=  # host:port
VAULT_URL=  # host
VAULT_SERVICE_SERVICE_PORT=  # port
VAULT_TOKEN=
MINIO_HOST=  # host
MINIO_PORT=  # port
MINIO_ACCESS_KEY=
MINIO_SECRET_ACCESS_KEY=
INNER_CACHE_TTL_SECONDS=0
# </Custodian secrets>

# <On-prem executor>
# EXECUTOR_PATH: /custodian-as-a-service/executor/executor.py
# VENV_PATH: /custodian-as-a-service/executor/.executor_venv/bin/python
# </On-prem executor>

# <MODULAR SDK>
modular_service_mode=${_service_mode}
modular_mongo_db_name=${_db_name}
modular_mongo_user=
modular_mongo_password=
modular_mongo_url=  # host:port
application_name=caas
component_name=custodian_service
# </MODULAR SDK>

#-------------------------------------------------------------------------------
# The following commented envs are necessary only for saas
# batch_job_def_name=caas-job-definition  # reports-submit-job-definition
# batch_job_queue_name=caas-job-queue  # reports-submit-job-queue
# event_bridge_service_role_to_invoke_batch=  # event-bridge-service-role-to-invoke-batch
# lambdas_alias_name=dev

# modular_assume_role_arn=
# MODULAR_AWS_REGION=

